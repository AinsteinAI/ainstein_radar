#!/usr/bin/env python
PACKAGE = "ainstein_radar_filters"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add( "filter_update_rate", int_t, 0, "Tracking filter output data rate (fixed on initialization)", 20, 1, 100 )

gen.add( "filter_min_time", double_t, 0, "Minimum time before target begins being tracked", 1.0, 0.0, 10.0 )
gen.add( "filter_timeout", double_t, 0, "Timeout for filter updates, after which target is dropped", 0.5, 0.0, 10.0 )

val_gate_thresh_enum = gen.enum([ gen.const("99_5_percent", double_t, 0.207, "99.5 percent confidence"),
                                  gen.const("99_0_percent", double_t, 0.297, "99.0 percent confidence"),
                                  gen.const("97_5_percent", double_t, 0.484, "97.5 percent confidence"),
                                  gen.const("95_0_percent", double_t, 0.711, "95.0 percent confidence"),
                                  gen.const("90_0_percent", double_t, 1.064, "90.0 percent confidence"),
                                  gen.const("75_0_percent", double_t, 1.923, "75.0 percent confidence"),
                                  gen.const("25_0_percent", double_t, 5.385, "25.0 percent confidence"),
                                  gen.const("10_0_percent", double_t, 7.779, "10.0 percent confidence"),
		                  gen.const("5_0_percent", double_t, 9.488, "5.0 percent confidence")],
		                "An enum to set the tracking filter validation rate based on measurement confidence")

gen.add("filter_val_gate_thresh", double_t, 0, "Tracking filter validation gate threshold for new measurements", 1.923, 0.207, 9.488, edit_method=val_gate_thresh_enum)

gen.add("kf_init_pos_stdev", double_t, 0, "Kalman Filter initial position standard deviation, in meters", 1.0, 0.001, 10.0 )
gen.add("kf_init_vel_stdev", double_t, 0, "Kalman Filter initial velocity standard deviation, in meters per second", 2.0, 0.001, 10.0 )

gen.add("kf_q_vel_stdev", double_t, 0, "Kalman Filter velocity process noise standard deviation, in meters per second", 2.0, 0.001, 10.0 )

gen.add("kf_r_speed_stdev", double_t, 0, "Kalman Filter speed measurement noise standard deviation, in meters per second", 2.0, 0.001, 10.0 )
gen.add("kf_r_pos_stdev", double_t, 0, "Kalman Filter position measurement noise standard deviation, in meters", 1.0, 0.01, 10.0 )

exit(gen.generate(PACKAGE, "ainstein_radar_filters", "TrackingFilterCartesian"))
